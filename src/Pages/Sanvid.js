import './Information.css';
import DH from '../images/SanvidDH.png';
const Sanvid =()=>{



    return(
        <div>
            <h1>Message Encryption via Diffie-Hellman Key Generation</h1>
            <img src={DH} alt="duck" className='diagram'/>


            <p className="info">
            
            This program uses the diffie-hellman protocol for key generation. Each user randomly generates
            a large private key (a), preferably prime to prevent logarithmic decryption approaches. A global
            value (g), and global prime modulus (p) is generated by the platform upon which messages are
            being sent.<br/><br/>
            Primes can be generated by the Sieve of Eratosthenes, although this process takes a long time for
            larger primes.<br/><br/>
            Each user generates a public key from the formula A = gamod p for “User A”. Using AB = Ab
            mod p, a shared secret key can be generated from user A’s public key, and user B’s private key.
            This ensures a shared key can be generated without sharing of private keys. The shared private
            key can be applied to various cryptographic approaches, in this example a caesar cipher, which
            can then be decrypted using the shared secret key from the other end.</p>

        </div>
    );


};

export default Sanvid;